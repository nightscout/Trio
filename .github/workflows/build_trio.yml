name: 4. Build Trio
run-name: Build Trio (${{ github.ref_name }})

on:
  workflow_dispatch: {}       # 수동 실행 트리거 활성화
  schedule:
    - cron: "0 8 * * 3"    # 매주 수요일 08:00 UTC
    - cron: "0 6 1 * *"    # 매월 1일 06:00 UTC

env:
  UPSTREAM_REPO: nightscout/Trio
  UPSTREAM_BRANCH: ${{ github.ref_name }}
  TARGET_BRANCH: ${{ github.ref_name }}
  ALIVE_BRANCH_MAIN: alive-main
  ALIVE_BRANCH_DEV: alive-dev

jobs:
  check_certs:
    name: Check certificates
    uses: ./.github/workflows/create_certs.yml
    secrets: inherit

  check_alive_and_permissions:
    needs: check_certs
    runs-on: ubuntu-latest
    name: Check alive branch and permissions
    permissions:
      contents: write
    outputs:
      WORKFLOW_PERMISSION: ${{ steps.workflow-permission.outputs.has_permission }}
    steps:
      - name: Check for workflow permissions
        id: workflow-permission
        env:
          TOKEN_TO_CHECK: ${{ secrets.GH_PAT }}
        run: |
          PERMISSIONS=$(curl -sS -f -I -H "Authorization: token $TOKEN_TO_CHECK" https://api.github.com | grep ^x-oauth-scopes: | cut -d' ' -f2-)
          if [[ $PERMISSIONS =~ "workflow" || $PERMISSIONS == "" ]]; then
            echo "has_permission=true" >> $GITHUB_OUTPUT
          else
            echo "has_permission=false" >> $GITHUB_OUTPUT
          fi

      - name: Check for alive branches
        if: steps.workflow-permission.outputs.has_permission == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          if gh api -H "Accept: application/vnd.github+json" /repos/${{ github.repository_owner }}/Trio/branches | jq '[.[] | select(.name=="alive-main" or .name=="alive-dev")] | length > 0'; then
            echo "ALIVE_BRANCH_EXISTS=true" >> $GITHUB_ENV
          else
            echo "ALIVE_BRANCH_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Create alive branches
        if: env.ALIVE_BRANCH_EXISTS == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          SHA_MAIN=$(gh api /repos/${{ env.UPSTREAM_REPO }}/git/refs/heads/main | jq -r .object.sha)
          SHA_DEV=$(gh api /repos/${{ env.UPSTREAM_REPO }}/git/refs/heads/dev | jq -r .object.sha)
          gh api --method POST /repos/${{ github.repository_owner }}/Trio/git/refs -f ref='refs/heads/alive-main' -f sha=$SHA_MAIN
          gh api --method POST /repos/${{ github.repository_owner }}/Trio/git/refs -f ref='refs/heads/alive-dev' -f sha=$SHA_DEV

  check_latest_from_upstream:
    needs: [check_certs, check_alive_and_permissions]
    runs-on: ubuntu-latest
    name: Check upstream and keep alive
    outputs:
      NEW_COMMITS: ${{ steps.sync.outputs.has_new_commits }}
      ABORT_SYNC: ${{ steps.check_branch.outputs.ABORT_SYNC }}
    steps:
      - id: check_branch
        name: Determine alive branch
        run: |
          BRANCH=${GITHUB_REF##*/}
          if [[ "$BRANCH" == "main" ]]; then
            echo "ALIVE_BRANCH=${{ env.ALIVE_BRANCH_MAIN }}" >> $GITHUB_OUTPUT
            echo "ABORT_SYNC=false" >> $GITHUB_OUTPUT
          elif [[ "$BRANCH" == "dev" ]]; then
            echo "ALIVE_BRANCH=${{ env.ALIVE_BRANCH_DEV }}" >> $GITHUB_OUTPUT
            echo "ABORT_SYNC=false" >> $GITHUB_OUTPUT
          else
            echo "ABORT_SYNC=true" >> $GITHUB_OUTPUT
          fi

      - name: Checkout alive branch
        if: steps.check_branch.outputs.ABORT_SYNC == 'false'
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}
          ref: ${{ steps.check_branch.outputs.ALIVE_BRANCH }}

      - id: sync
        name: Sync upstream changes
        if: steps.check_branch.outputs.ABORT_SYNC == 'false'
        uses: aormsby/Fork-Sync-With-Upstream-action@v3.4.1
        with:
          target_sync_branch: ${{ steps.check_branch.outputs.ALIVE_BRANCH }}
          shallow_since: 6 months ago
          target_repo_token: ${{ secrets.GH_PAT }}
          upstream_sync_branch: ${{ env.UPSTREAM_BRANCH }}
          upstream_sync_repo: ${{ env.UPSTREAM_REPO }}

      - name: Keep alive
        run: echo "Keep Alive temporarily removed"

  build:
    name: Build
    needs: [check_certs, check_alive_and_permissions, check_latest_from_upstream]
    runs-on: macos-latest
    permissions:
      contents: write
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'schedule' && needs.check_alive_and_permissions.outputs.WORKFLOW_PERMISSION == 'true') ||
      (needs.check_latest_from_upstream.outputs.NEW_COMMITS == 'true')
    steps:
      - name: Select Xcode version
        run: sudo xcode-select --switch /Applications/Xcode_16.3.app/Contents/Developer

      - name: Checkout Repo for building
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}
          ref: ${{ env.TARGET_BRANCH }}
          submodules: recursive
          fetch-depth: 0

      - name: Init & Update Submodules
        run: |
          git submodule sync --recursive
          git submodule update --init --recursive

      - name: Customize Trio
        run: |
          if ls patches/* &> /dev/null; then
            git apply patches/* --allow-empty -v --whitespace=fix
          fi

      - name: Cache Ruby Gems
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-gems-

      - name: Install Dependencies
        run: bundle install

      - name: Sync clock
        run: sudo sntp -sS time.windows.com

      - name: Update entitlement
        run: sed -i -e 's/<string>bluetooth-central<\/string>/<string>bluetooth-central<\/string><string>audio<\/string>/g' FreeAPS/Resources/Info.plist

      - name: Fastlane Build & Archive
        run: bundle exec fastlane build_trio
        env:
          TEAMID: ${{ secrets.TEAMID }}
          GH_PAT: ${{ secrets.GH_PAT }}
          FASTLANE_KEY_ID: ${{ secrets.FASTLANE_KEY_ID }}
          FASTLANE_ISSUER_ID: ${{ secrets.FASTLANE_ISSUER_ID }}
          FASTLANE_KEY: ${{ secrets.FASTLANE_KEY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

      - name: Increment build number
        run: fastlane run increment_build_number

      - name: Fastlane Release
        run: bundle exec fastlane release
        env:
          TEAMID: ${{ secrets.TEAMID }}
          GH_PAT: ${{ secrets.GH_PAT }}
          FASTLANE_KEY_ID: ${{ secrets.FASTLANE_KEY_ID }}
          FASTLANE_ISSUER_ID: ${{ secrets.FASTLANE_ISSUER_ID }}
          FASTLANE_KEY: ${{ secrets.FASTLANE_KEY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            artifacts
            buildlog
